---
interface Props {

    modalTitle: string;
    modalBody: string;
    modalButtonTitle: string;
}

const {modalButtonTitle, modalTitle, modalBody} = Astro.props;
---
<button id="modalButton" class="modalButton block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" type="button">
  {modalButtonTitle}
</button>
<div id="defaultModal" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full">
  <div class="relative w-full max-w-2xl max-h-full">
    <!-- Modal content -->
    <div class="modalContent relative bg-white rounded-lg shadow dark:bg-gray-700">
    <!-- Modal header -->
    <div class="modalHeader flex items-start justify-between p-4 border-b rounded-t dark:border-gray-600">
      <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
      {modalTitle}
      </h3>
     
    </div>
    <div class="modalBody p-6 space-y-6">
      <p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
      {modalBody}
      </p>
    </div>
    
    </div>
  </div>
</div>
<script>
  import { Modal } from 'flowbite'
  
  // select the two elements that we'll work with
  const $buttonElement: HTMLElement | null = document.querySelector('#modalButton');
  
  const $modalElement: HTMLElement | null = document.querySelector('#defaultModal');
  
  // create a new modal component
  const modal = new Modal($modalElement);
  
  // toggle the visibility of the modal when clicking on the button
  if ($buttonElement) {
    $buttonElement.addEventListener('click', () => modal.toggle());
  }
</script>